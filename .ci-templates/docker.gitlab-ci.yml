.build-dind:
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

.build-common:
  extends: .build-dind
  variables:
    TAG_LATEST: "false"
    PUSH_IMAGE: "false"
    RELEASE_IMAGE: "false"
    IMAGE_PATH: "."        # Default for single-image builds
    DOCKERFILE: Dockerfile # Default for single-image builds

  before_script:
    - set -eu
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

  script:
    - |
      cd "$IMAGE_PATH"
      DOCKERFILE="${DOCKERFILE:-Dockerfile}"

      # Determine tag
      if [ "${RELEASE_IMAGE}" = "true" ]; then
        if [ -z "${CI_COMMIT_TAG:-}" ]; then
          echo "RELEASE_IMAGE=true requires a CI_COMMIT_TAG" >&2
          exit 1
        fi
        IMAGE_TAG="${CI_COMMIT_TAG}"
        PUSH_IMAGE="true"
        TAG_LATEST="true"
      else
        IMAGE_TAG="${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
      fi

      echo "Building $IMAGE_ENV_PATH:$IMAGE_TAG using $IMAGE_PATH/$DOCKERFILE"

      # Build & tag
      docker build --pull -f "$DOCKERFILE" -t "$IMAGE_ENV_PATH:$IMAGE_TAG" .

      # Tag latest if needed
      if [ "${TAG_LATEST}" = "true" ]; then
        docker tag "$IMAGE_ENV_PATH:$IMAGE_TAG" "$IMAGE_ENV_PATH:latest"
      fi

      # Push if enabled
      if [ "${PUSH_IMAGE}" = "true" ]; then
        docker push "$IMAGE_ENV_PATH:$IMAGE_TAG"
        [ "${TAG_LATEST}" = "true" ] && docker push "$IMAGE_ENV_PATH:latest"

        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE_ENV_PATH:$IMAGE_TAG" || true)
        DIGEST="${DIGEST#*@}"
        echo "IMAGE_DIGEST=${DIGEST:-skipped}" > image-digest.env
      else
        echo "IMAGE_DIGEST=skipped" > image-digest.env
      fi