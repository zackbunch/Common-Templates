.build-dind:
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""


.build-common:
  extends: .build-dind
  variables:
    TAG_LATEST: "false"
    PUSH_IMAGE: "false"
    RELEASE_IMAGE: "false"
    TAG_SUFFIX: ""        # Will be validated
    DOCKER_CONTEXT: "."
    DOCKERFILE: Dockerfile

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"

  script: |
    set -euo pipefail

    # Verify required variables
    if [ -z "${IMAGE_ENV_PATH:-}" ]; then
      echo "ERROR: IMAGE_ENV_PATH must be defined!" >&2
      exit 1
    fi

    # Validate TAG_SUFFIX (prevents confusion)
    if [ "${TAG_SUFFIX}" = "latest" ]; then
      echo "ERROR: TAG_SUFFIX cannot be 'latest' (use RELEASE_IMAGE=true for :latest tag)" >&2
      exit 1
    fi

    # Compute base tag
    if [ "${RELEASE_IMAGE}" = "true" ]; then
      if [ -z "${CI_COMMIT_TAG:-}" ]; then
        echo "ERROR: RELEASE_IMAGE=true requires CI_COMMIT_TAG" >&2
        exit 1
      fi
      BASE_TAG="${CI_COMMIT_TAG}"
      PUSH_IMAGE="true"
      TAG_LATEST="true"
    else
      BASE_TAG="${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}"
    fi

    # Final image tag (handles suffix safely)
    IMAGE_TAG="${TAG_SUFFIX:+${TAG_SUFFIX}-}${BASE_TAG}"

    # Build (NO BUILD ARGUMENTS FOR SECRETS!)
    docker build --pull \
      -f "${DOCKERFILE}" \
      -t "${IMAGE_ENV_PATH}:${IMAGE_TAG}" \
      "${DOCKER_CONTEXT}"

    # Tag :latest if requested
    if [ "${TAG_LATEST}" = "true" ]; then
      docker tag "${IMAGE_ENV_PATH}:${IMAGE_TAG}" "${IMAGE_ENV_PATH}:latest"
    fi

    # Push if requested
    if [ "${PUSH_IMAGE}" = "true" ]; then
      docker push "${IMAGE_ENV_PATH}:${IMAGE_TAG}"
      if [ "${TAG_LATEST}" = "true" ]; then
        docker push "${IMAGE_ENV_PATH}:latest"
      fi

      # Correctly resolve digest
      DIGEST_LINE=$(docker inspect --format='{{index .RepoDigests 0}}' "${IMAGE_ENV_PATH}:${IMAGE_TAG}" 2>/dev/null || true)
      if [ -n "${DIGEST_LINE}" ]; then
        IMAGE_REF_VALUE="${DIGEST_LINE}"
        IMAGE_DIGEST_VALUE="${DIGEST_LINE#*@sha256:}"
      else
        IMAGE_REF_VALUE="skipped"
        IMAGE_DIGEST_VALUE="skipped"
      fi
    else
      IMAGE_REF_VALUE="skipped"
      IMAGE_DIGEST_VALUE="skipped"
    fi

    # Output env file
    {
      echo "IMAGE_ENV_PATH=${IMAGE_ENV_PATH}"
      echo "IMAGE_TAG=${IMAGE_TAG}"
      echo "IMAGE_DIGEST=${IMAGE_DIGEST_VALUE}"
      echo "IMAGE_REF=${IMAGE_REF_VALUE}"
    } > "${CI_PROJECT_DIR}/image-digest.env"

  artifacts:
    reports:
      dotenv: image-digest.env
    paths:
      - image-digest.env
    when: always
    expire_in: 1 week