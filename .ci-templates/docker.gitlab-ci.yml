.build-dind:
  image: docker:24.0.5
  variables:
    DIND_IMAGE:       docker:24.0.5-dind
    DOCKER_DRIVER:    overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: $DIND_IMAGE
      alias: docker
  before_script:
    - set -euxo pipefail
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  after_script:
    - docker logout "$CI_REGISTRY" || true

.build-common:
  script:
    - echo "Starting Docker build for $APP_NAME"
    - echo "Building image $IMAGE_ENV_PATH:$SHORT_SHA"
    - docker build -t "$IMAGE_ENV_PATH:$SHORT_SHA" .

    - echo "Tagging image as latest $IMAGE_ENV_PATH:latest"
    - docker tag "$IMAGE_ENV_PATH:$SHORT_SHA" "$IMAGE_ENV_PATH:latest"

    - |
      if [ "$PUSH_IMAGE" = "true" ]; then
        echo "PUSH_IMAGE=true — Pushing SHA and latest tags..."
        docker push "$IMAGE_ENV_PATH:$SHORT_SHA"
        docker push "$IMAGE_ENV_PATH:latest"

        if [ -n "$TAG_EXTRA" ]; then
          if [ "$PULL_BEFORE_TAG" = "true" ]; then
            echo "Pulling image before retagging..."
            docker pull "$IMAGE_ENV_PATH:$SHORT_SHA"
          fi

          for tag in $TAG_EXTRA; do
            echo "Tagging $IMAGE_ENV_PATH:$tag"
            docker tag "$IMAGE_ENV_PATH:$SHORT_SHA" "$IMAGE_ENV_PATH:$tag"
            docker push "$IMAGE_ENV_PATH:$tag"
          done
        fi

        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE_ENV_PATH:$SHORT_SHA" || true)
        echo "Image digest: $DIGEST"
      else
        echo "PUSH_IMAGE=false — skipping docker push."
        echo "Built image is available locally but was not pushed."
      fi

    - echo "Final local images for $APP_NAME:"
    - docker images "$IMAGE_ENV_PATH" --format '{{.Repository}}:{{.Tag}} ({{.Size}})'