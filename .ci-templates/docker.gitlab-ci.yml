.build-dind:
  image: docker:24.0.5
  variables:
    DIND_IMAGE:       docker:24.0.5-dind
    DOCKER_DRIVER:    overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: $DIND_IMAGE
      alias: docker
  before_script:
    - set -euxo pipefail
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  after_script:
    - docker logout "$CI_REGISTRY" || true

.build-common:
  script:
    - echo "üîß Starting Docker build for $APP_NAME"
    - echo "üõ†Ô∏è  Building image $IMAGE_ENV_PATH:$SHORT_SHA"
    - docker build -t "$IMAGE_ENV_PATH:$SHORT_SHA" .

    - echo "üîñ Tagging image as latest $IMAGE_ENV_PATH:latest"
    - docker tag "$IMAGE_ENV_PATH:$SHORT_SHA" "$IMAGE_ENV_PATH:latest"

    - |
      if [ "$PUSH_IMAGE" = "true" ]; then
        echo "üì¶ PUSH_IMAGE=true ‚Äî Pushing tags to registry..."
        docker push "$IMAGE_ENV_PATH:$SHORT_SHA"
        docker push "$IMAGE_ENV_PATH:latest"
        echo "‚úÖ Image pushed: $IMAGE_ENV_PATH:$SHORT_SHA"
        echo "‚úÖ Image pushed: $IMAGE_ENV_PATH:latest"

        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE_ENV_PATH:$SHORT_SHA" || true)
        echo "üß¨ Image digest: $DIGEST"
      else
        echo "üö´ PUSH_IMAGE=false ‚Äî skipping docker push."
        echo "üß™ Built image is available locally but was not pushed."
      fi

    - echo "üìå Final local images for $APP_NAME:"
    - docker images "$IMAGE_ENV_PATH" --format '‚Üí {{.Repository}}:{{.Tag}} ({{.Size}})'