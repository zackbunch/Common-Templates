# ---------------------------------------------------------------------------
# Secret Detection Template for GitLab CI
#
# Description:
#   This template runs GitLabâ€™s secret scanning analyzer using the official
#   Secure Analyzer image. It scans for hardcoded secrets in merge requests
#   targeting protected branches like `dev`, `test`, `int`, and `master`.
#
# Behavior:
#   - Runs only on merge requests targeting critical branches
#   - Fails the pipeline if secrets are detected (enforced via report + allow_failure: false)
#   - Produces a GitLab-native secret_detection report
#   - Skips execution on tags, schedules, and other pipeline sources
#
# Usage:
#   - Include this template in your pipeline or scan-of-scans template
#   - Override variables (e.g., excluded paths) at the project level if needed
#
# Required:
#   - CI_REGISTRY must be configured for Secure Analyzer image pulls
#   - GitLab Runner must support Docker-in-Docker (DinD)
#
# ---------------------------------------------------------------------------

secret-analyzer-template:
  stage: scan
  image: "$SECURE_ANALYZERS_PREFIX/secrets:$SECRETS_ANALYZER_VERSION$SECRET_DETECTION_IMAGE_SUFFIX"
  services: []
  variables:
    SECRET_DETECTION_EXCLUDED_PATHS: ""
    SECRET_DETECTION_IMAGE_SUFFIX: ""
    SECRETS_ANALYZER_VERSION: "latest"
    GIT_DEPTH: "25"
  allow_failure: false
  script:
    - /analyzer run
  rules:
    - if: >
        $CI_PIPELINE_SOURCE == "merge_request_event" &&
        ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^dev$/i ||
         $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^test$/i ||
         $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^int$/i ||
         $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^master$/i ||
         $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main$/i)
      when: always
    - when: manual
      allow_failure: true
  artifacts:
    reports:
      secret_detection: gl-secret-detection-report.json
    expire_in: 1 week
    when: always
    access: developer
  tags: [standard]