variables:
  DOCKER_TLS_CERTDIR: ""                 # disable TLS for DinD
  DOCKER_BUILDKIT: "1"
  DOCKER_HOST: "tcp://docker:2375"
  CI_APPLICATION_TAG: ""                 # optional override

.before_docker: &before_docker
  - set -euo pipefail
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin "$CI_REGISTRY"

.compute_meta: &compute_meta |
  set -euo pipefail

  BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE"
  if [ -n "${APP_NAME:-}" ]; then
    BASE_IMAGE_PATH="${BASE_IMAGE_PATH}/${APP_NAME}"
  fi

  # derive tag if not provided; prefer commit tag (for tag-only jobs this always exists)
  TAG_SRC="${CI_APPLICATION_TAG:-${CI_COMMIT_TAG:-}}"
  if [ -z "$TAG_SRC" ]; then
    echo "CI_APPLICATION_TAG is empty and CI_COMMIT_TAG not present; refuse to build." >&2
    exit 2
  fi

  # normalize: lowercase, safe chars for docker tag
  IMAGE_TAG="$(printf '%s' "$TAG_SRC" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9_.-]+/-/g')"

  DOCKER_IMAGE_REPO="$BASE_IMAGE_PATH"
  DOCKER_IMAGE_WITH_TAG="${BASE_IMAGE_PATH}:${IMAGE_TAG}"
  DOCKER_IMAGE_LATEST="${BASE_IMAGE_PATH}:latest"
  PUBLISH_LATEST="true"

  # emit docker.env
  {
    echo "DOCKER_IMAGE_REPO=$DOCKER_IMAGE_REPO"
    echo "DOCKER_IMAGE_WITH_TAG=$DOCKER_IMAGE_WITH_TAG"
    echo "DOCKER_IMAGE_LATEST=$DOCKER_IMAGE_LATEST"
    echo "IMAGE_TAG=$IMAGE_TAG"
    echo "PUBLISH_LATEST=$PUBLISH_LATEST"
  } > docker.env

build:docker:
  image: docker:24-cli
  stage: build
  services:
    - name: docker:24-dind
      alias: docker
  rules:
    - if: '$CI_COMMIT_TAG'        # run on any tag
    - when: never
  resource_group: "$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
  before_script:
    - *before_docker
    - *compute_meta
  script: |
    set -euo pipefail
    # If you want multi-arch later, keep buildx and add --platform + --push.
    docker build -t "$DOCKER_IMAGE_WITH_TAG" .
    docker push "$DOCKER_IMAGE_WITH_TAG"
    if [ "$PUBLISH_LATEST" = "true" ]; then
      docker tag "$DOCKER_IMAGE_WITH_TAG" "$DOCKER_IMAGE_LATEST"
      docker push "$DOCKER_IMAGE_LATEST"
    fi
  after_script:
    - docker logout "$CI_REGISTRY" || true
  artifacts:
    reports: { dotenv: docker.env }
    paths: [docker.env]
    expire_in: 30 days
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - api_failure
