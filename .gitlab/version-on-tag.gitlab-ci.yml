# .ci-templates/version-on-tag.yml
release:version-from-tag:
  image: alpine:3.20
  stage: release

  # If you don't have the anchor, uncomment the fallback rules block below.
  rules: !reference [.rule:tag-only, rules]

  variables:
    # Optional: flip to "true" to enforce SemVer on tags like 1.2.3 or 1.2.3-rc.1
    ENFORCE_SEMVER: "false"
    # Optional: flip to "true" to allow only protected tags (recommended for releases)
    REQUIRE_PROTECTED_TAG: "false"

  before_script:
    - set -euo pipefail

  script:
    # Must be running on a tag
    - |
      if [ -z "${CI_COMMIT_TAG:-}" ]; then
        echo "ERROR: Not running on a tag. Ref=${CI_COMMIT_REF_NAME}"; exit 1
      fi

    # Optional: restrict to protected tags only
    - |
      if [ "${REQUIRE_PROTECTED_TAG}" = "true" ] && [ "${CI_COMMIT_REF_PROTECTED:-false}" != "true" ]; then
        echo "ERROR: Tag '${CI_COMMIT_TAG}' is not protected."; exit 1
      fi

    # Optional: SemVer enforcement for release integrity
    - |
      if [ "${ENFORCE_SEMVER}" = "true" ]; then
        case "${CI_COMMIT_TAG}" in
          ([0-9]*.[0-9]*.[0-9]*|[0-9]*.[0-9]*.[0-9]*-*) : ;;
          (*) echo "ERROR: Tag '${CI_COMMIT_TAG}' is not SemVer."; exit 1 ;;
        esac
      fi

    # Write VERSION and dotenv for downstream jobs
    - echo "${CI_COMMIT_TAG}" > VERSION
    - printf 'VERSION=%s\n' "${CI_COMMIT_TAG}" > version.env
    - echo "Set VERSION=${CI_COMMIT_TAG}"

  artifacts:
    expose_as: "VERSION"
    paths:
      - VERSION
    reports:
      dotenv: version.env
    when: always
    expire_in: 1 week
