# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ci/docker/using_docker_build/
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

build:docker:
  # Use the official docker image.
  image: docker:cli
  stage: build
  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        export IMAGE_TAG="$CI_COMMIT_TAG"
      elif [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
        export IMAGE_TAG="mr-$CI_MERGE_REQUEST_IID"
      else
        export IMAGE_TAG="$CI_COMMIT_SHORT_SHA"
      fi

      if [[ -n "$APP_NAME" ]]; then
        export BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE/$APP_NAME"
      else
        export BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE"
      fi

      export DOCKER_IMAGE_NAME_WITH_TAG="$BASE_IMAGE_PATH:$IMAGE_TAG"
      export DOCKER_IMAGE_NAME_LATEST="$BASE_IMAGE_PATH:latest"
  # Tagging logic:
  # - For git tags: the git tag itself (e.g., v1.2.3)
  # - For MRs: mr-IID
  # - For branch builds: commit short SHA
  # - For default branch, 'latest' is also pushed.
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME_WITH_TAG" .
    - |
      if [[ -n "$CI_COMMIT_TAG" ]] || [[ -n "$CI_MERGE_REQUEST_IID" ]] || [[ ! "$CI_COMMIT_BRANCH" =~ ^gmarm- ]] || [[ "$PUSH_FEATURE_BRANCH" == "true" ]]; then
        echo "Pushing image $DOCKER_IMAGE_NAME_WITH_TAG"
        docker push "$DOCKER_IMAGE_NAME_WITH_TAG"
        if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
          docker tag "$DOCKER_IMAGE_NAME_WITH_TAG" "$DOCKER_IMAGE_NAME_LATEST"
          docker push "$DOCKER_IMAGE_NAME_LATEST"
        fi
      else
        echo "Skipping image push for branch build. Set PUSH_FEATURE_BRANCH=true to override."
      fi
