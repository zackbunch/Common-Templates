# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ci/docker/using_docker_build/
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:cli
  stage: build
  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - |
      if [[ -n "$APP_NAME" ]]; then
        export BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE/$APP_NAME"
      else
        export BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE"
      fi
      export DOCKER_IMAGE_NAME_WITH_SHA="$BASE_IMAGE_PATH:$CI_COMMIT_SHORT_SHA"
      export DOCKER_IMAGE_NAME_LATEST="$BASE_IMAGE_PATH:latest"
  # All branches are tagged with the commit short SHA.
  # The `latest` tag is added for the default branch.
  script:
    - docker pull "$DOCKER_IMAGE_NAME_LATEST" || true
    - docker build "$DOCKER_IMAGE_NAME_LATEST" -t "$DOCKER_IMAGE_NAME_WITH_SHA" .
    - |
      if [[ ! "$CI_COMMIT_BRANCH" =~ ^gmarm- ]] || [[ "$PUSH_FEATURE_BRANCH" == "true" ]]; then
        echo "Pushing image $DOCKER_IMAGE_NAME_WITH_SHA"
        docker push "$DOCKER_IMAGE_NAME_WITH_SHA"
        if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
          docker tag "$DOCKER_IMAGE_NAME_WITH_SHA" "$DOCKER_IMAGE_NAME_LATEST"
          docker push "$DOCKER_IMAGE_NAME_LATEST"
        fi
      else
        echo "Skipping image push for feature branch. Set PUSH_FEATURE_BRANCH=true to override."
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
