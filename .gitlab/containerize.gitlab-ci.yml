# Minimal Docker build/push job for privileged runners (DinD, POSIX-sh safe)

variables:
  DOCKER_TLS_CERTDIR: ""                 # disable TLS for DinD
  DOCKER_BUILDKIT: "1"
  PUSH_FEATURE_BRANCH: "false"           # set true to push from non-default, non-MR branches

.before_docker: &before_docker
  - set -eu
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin "$CI_REGISTRY"

.compute_meta: &compute_meta |
  set -eu
  BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE"
  if [ -n "${APP_NAME:-}" ] && [ "$APP_NAME" != "$CI_PROJECT_NAME" ]; then
    BASE_IMAGE_PATH="$BASE_IMAGE_PATH/$APP_NAME"
  fi

  if [ -n "${CI_COMMIT_TAG:-}" ]; then
    IMAGE_TAG="$CI_COMMIT_TAG"
  elif [ -n "${CI_MERGE_REQUEST_IID:-}" ]; then
    IMAGE_TAG="mr-${CI_MERGE_REQUEST_IID}-${CI_COMMIT_SHORT_SHA}"
  else
    IMAGE_TAG="$CI_COMMIT_SHORT_SHA"
  fi

  DOCKER_IMAGE_REPO="$BASE_IMAGE_PATH"
  DOCKER_IMAGE_WITH_TAG="$BASE_IMAGE_PATH:$IMAGE_TAG"
  DOCKER_IMAGE_LATEST="$BASE_IMAGE_PATH:latest"

build:docker:
  image: docker:24-cli
  stage: build
  services:
    - name: docker:24-dind
      alias: docker
  resource_group: "$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"

  before_script:
    - *before_docker
    - *compute_meta

  script: |
    set -eu

    docker build --pull \
      --secret id=gitlab_token,env=CI_JOB_TOKEN \
      --build-arg CI_REGISTRY=$CI_REGISTRY \
      --build-arg CI_API_V4_URL=$CI_API_V4_URL \
      --build-arg CI_PROJECT_ID=$CI_PROJECT_ID \
      --label org.opencontainers.image.created=$BUILD_DATE \
      --label org.opencontainers.image.source=$CI_PROJECT_URL \
      --label org.opencontainers.image.revision=$CI_COMMIT_SHA \
      --label org.opencontainers.image.version=$IMAGE_TAG \
      --label org.opencontainers.image.ref.name=$CI_COMMIT_REF_NAME \
      --label org.opencontainers.image.vendor=zackbunch \
      -t "$DOCKER_IMAGE_WITH_TAG" .

    IMAGE_PUSHED="false"
    DIGEST=""
    IMAGE_REF=""
    BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

    # Push policy
    SHOULD_PUSH="false"
    if [ "${CI_PIPELINE_SOURCE:-}" = "merge_request_event" ]; then
      SHOULD_PUSH="true"
    fi
    if [ -n "${CI_COMMIT_TAG:-}" ]; then
      SHOULD_PUSH="true"
    fi
    if [ -n "${CI_COMMIT_BRANCH:-}" ] && [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
      SHOULD_PUSH="true"
    fi
    if [ "${PUSH_FEATURE_BRANCH:-false}" = "true" ]; then
      SHOULD_PUSH="true"
    fi

    if [ "$SHOULD_PUSH" = "true" ]; then
      IMAGE_PUSHED="true"
      docker push "$DOCKER_IMAGE_WITH_TAG"

      # Capture digest cleanly (no redundant pull)
      if docker inspect "$DOCKER_IMAGE_WITH_TAG" >/dev/null 2>&1; then
        DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' "$DOCKER_IMAGE_WITH_TAG" | cut -d'@' -f2)"
        IMAGE_REF="$DOCKER_IMAGE_REPO@$DIGEST"
      fi

      # Push 'latest' only for default branch
      if [ -n "${CI_COMMIT_BRANCH:-}" ] && [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        docker tag "$DOCKER_IMAGE_WITH_TAG" "$DOCKER_IMAGE_LATEST"
        docker push "$DOCKER_IMAGE_LATEST"
      fi
    else
      echo "Skipping push."
    fi

    # Emit dotenv
    {
      echo "DOCKER_IMAGE_PUSHED=$IMAGE_PUSHED"
      echo "DOCKER_IMAGE_REPO=$DOCKER_IMAGE_REPO"
      echo "DOCKER_IMAGE_TAG=$IMAGE_TAG"
      echo "DOCKER_IMAGE_WITH_TAG=$DOCKER_IMAGE_WITH_TAG"
      echo "DOCKER_IMAGE_DIGEST=$DIGEST"
      echo "IMAGE_REF=$IMAGE_REF"
      echo "CS_IMAGE=$IMAGE_REF"
    } > docker.env

  after_script:
    - docker logout "$CI_REGISTRY" || true

  artifacts:
    reports:
      dotenv: docker.env
    paths:
      - docker.env
    expire_in: 30 days      # was 1 week, extended for safer downstream use
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - api_failure