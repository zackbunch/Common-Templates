# Minimal Docker build/push job for privileged runners (DinD)
# Opinionated defaults: single registry path, clean dotenv, push on default/tag/MR.

variables:
  DOCKER_TLS_CERTDIR: ""                 # disable TLS for DinD
  # DOCKER_HOST: "tcp://docker:2375"       # talk to DinD
  PUSH_FEATURE_BRANCH: "false"           # set true to push from non-default, non-MR branches

.before_docker: &before_docker
  - set -euo pipefail
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin "$CI_REGISTRY"

.compute_meta: &compute_meta |
  set -euo pipefail
  BASE_IMAGE_PATH="$CI_REGISTRY_IMAGE"
  if [[ -n "${APP_NAME:-}" ]]; then
    BASE_IMAGE_PATH="$BASE_IMAGE_PATH/$APP_NAME"
  fi

  if [[ -n "${CI_COMMIT_TAG:-}" ]]; then
    IMAGE_TAG="$CI_COMMIT_TAG"
  elif [[ -n "${CI_MERGE_REQUEST_IID:-}" ]]; then
    IMAGE_TAG="mr-${CI_MERGE_REQUEST_IID}-${CI_COMMIT_SHORT_SHA}"
  else
    IMAGE_TAG="$CI_COMMIT_SHORT_SHA"
  fi

  DOCKER_IMAGE_REPO="${BASE_IMAGE_PATH}"
  DOCKER_IMAGE_WITH_TAG="${BASE_IMAGE_PATH}:${IMAGE_TAG}"
  DOCKER_IMAGE_LATEST="${BASE_IMAGE_PATH}:latest"

build:docker:
  image: docker:24-cli
  stage: build
  services:
    - name: docker:24-dind
      alias: docker
  resource_group: "$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"

  before_script:
    - *before_docker
    - *compute_meta

  script:
    - |
      set -euo pipefail

      docker build --pull \
        -t "${DOCKER_IMAGE_WITH_TAG}" .

      IMAGE_PUSHED="false"
      DIGEST=""
      IMAGE_REF=""

      # Push for default branch, tags, MRs, or opt-in feature branches
      if [[ "${CI_PIPELINE_SOURCE:-}" == "merge_request_event" \
            || -n "${CI_COMMIT_TAG:-}" \
            || ( -n "${CI_COMMIT_BRANCH:-}" && "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ) \
            || "${PUSH_FEATURE_BRANCH:-}" == "true" ]]; then
        IMAGE_PUSHED="true"
        docker push "${DOCKER_IMAGE_WITH_TAG}"

        # Normalize digest for downstream (repo@sha256:...)
        docker pull "${DOCKER_IMAGE_WITH_TAG}" >/dev/null 2>&1 || true
        DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' "${DOCKER_IMAGE_WITH_TAG}" | cut -d'@' -f2 || true)"
        if [[ -n "${DIGEST}" ]]; then
          IMAGE_REF="${DOCKER_IMAGE_REPO}@${DIGEST}"
        fi

        # Push 'latest' only on default branch
        if [[ -n "${CI_COMMIT_BRANCH:-}" && "${CI_COMMIT_BRANCH}" == "${CI_DEFAULT_BRANCH}" ]]; then
          docker tag "${DOCKER_IMAGE_WITH_TAG}" "${DOCKER_IMAGE_LATEST}"
          docker push "${DOCKER_IMAGE_LATEST}"
        fi
      else
        echo "Skipping push."
      fi

      # Emit dotenv for downstream jobs
      {
        echo "DOCKER_IMAGE_PUSHED=${IMAGE_PUSHED}"
        echo "DOCKER_IMAGE_REPO=${DOCKER_IMAGE_REPO}"
        echo "DOCKER_IMAGE_TAG=${IMAGE_TAG}"
        echo "DOCKER_IMAGE_WITH_TAG=${DOCKER_IMAGE_WITH_TAG}"
        echo "DOCKER_IMAGE_DIGEST=${DIGEST}"
        echo "IMAGE_REF=${IMAGE_REF}"   # repo@sha256:... (scanner/deploy friendly)
        echo "CS_IMAGE=${IMAGE_REF}"
      } > docker.env

  after_script:
    - docker logout "$CI_REGISTRY" || true

  artifacts:
    reports:
      dotenv: docker.env
    paths:
      - docker.env
    expire_in: 1 week

  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists: [Dockerfile]
    - if: $CI_COMMIT_TAG
      exists: [Dockerfile]
    - if: $CI_COMMIT_BRANCH
      exists: [Dockerfile]