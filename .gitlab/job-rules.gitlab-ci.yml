# .gitlab/job-rules.gitlab-ci.yml
#
# Reusable job rules — each block is a hidden job that can be referenced
# with:
#   rules: !reference [.rule:name-here, rules]
#
# NOTES:
# - "First match wins": GitLab evaluates rules top-to-bottom and stops on the first match.
# - Always end with an explicit `- when: never` to deny all non-matching cases.
# - Use these to avoid copy/pasting complex `if:` conditions across jobs.

# -------------------------------------------------------------------
# Example: run scans only when an MR targets dev/test/int/main/master
#   rules: !reference [.rule:scan-on-mr-to-env, rules]
# -------------------------------------------------------------------
.rule:scan-on-mr-to-env:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(dev|test|int|prod|main|master)$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: add a manual “Play” button for non-MR pipelines only
#   rules: !reference [.rule:scan-manual-non-mr, rules]
# -------------------------------------------------------------------
.rule:scan-manual-non-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: manual
      allow_failure: true

# -------------------------------------------------------------------
# Example: run job on push pipelines or MR pipelines
#   rules: !reference [.rule:push-or-mr, rules]
# -------------------------------------------------------------------
.rule:push-or-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run job only on direct branch pushes (no MRs, no tags)
#   rules: !reference [.rule:push-branches-only, rules]
# -------------------------------------------------------------------
.rule:push-branches-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run job only when a tag is pushed
#   rules: !reference [.rule:tag-only, rules]
# -------------------------------------------------------------------
.rule:tag-only:
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run job only in merge request pipelines
#   rules: !reference [.rule:mr-only, rules]
# -------------------------------------------------------------------
.rule:mr-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: show a manual button everywhere, required if clicked
#   rules: !reference [.rule:manual-anywhere, rules]
# -------------------------------------------------------------------
.rule:manual-anywhere:
  rules:
    - when: manual
      allow_failure: false

# -------------------------------------------------------------------
# Example: run only on default branch (e.g. “main”)
#   rules: !reference [.rule:default-branch-only, rules]
# -------------------------------------------------------------------
.rule:default-branch-only:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only on protected branches
#   rules: !reference [.rule:protected-branches-only, rules]
# -------------------------------------------------------------------
.rule:protected-branches-only:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only on protected tags
#   rules: !reference [.rule:protected-tags-only, rules]
# -------------------------------------------------------------------
.rule:protected-tags-only:
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only when branch is dev/test/int/main/master
#   rules: !reference [.rule:env-branches-only, rules]
# -------------------------------------------------------------------
.rule:env-branches-only:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(dev|test|int|main|master)$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only on scheduled pipelines
#   rules: !reference [.rule:schedule-only, rules]
# -------------------------------------------------------------------
.rule:schedule-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only when triggered via Web UI or API
#   rules: !reference [.rule:web-or-api-only, rules]
# -------------------------------------------------------------------
.rule:web-or-api-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only on RC tags (e.g. 1.2.3-rc.1)
#   rules: !reference [.rule:rc-tags-only, rules]
# -------------------------------------------------------------------
.rule:rc-tags-only:
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run in MR pipelines only if the MR has “security-scan” label
#   rules: !reference [.rule:mr-with-label-security-scan, rules]
# -------------------------------------------------------------------
.rule:mr-with-label-security-scan:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /(^|, )security-scan(,|$)/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: skip job entirely if MR title starts with Draft: or WIP:
#   rules: !reference [.rule:skip-draft-mr, rules]
# -------------------------------------------------------------------
.rule:skip-draft-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /^(Draft|WIP):/i'
      when: never
    - when: on_success

# -------------------------------------------------------------------
# Example: run only if files under src/ or cmd/ changed
#   rules: !reference [.rule:changes-only-src, rules]
# -------------------------------------------------------------------
.rule:changes-only-src:
  rules:
    - changes:
        - src/**/*
        - cmd/**/*
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: skip job if only docs or Markdown files changed
#   rules: !reference [.rule:skip-docs-only, rules]
# -------------------------------------------------------------------
.rule:skip-docs-only:
  rules:
    - changes:
        - docs/**/*
        - "**/*.md"
      when: never
    - when: on_success

# -------------------------------------------------------------------
# Example: run only on MRs coming from forks
#   rules: !reference [.rule:mr-from-fork-only, rules]
# -------------------------------------------------------------------
.rule:mr-from-fork-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH != $CI_PROJECT_PATH'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Example: run only on MRs coming from the same project
#   rules: !reference [.rule:mr-same-project-only, rules]
# -------------------------------------------------------------------
.rule:mr-same-project-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH == $CI_PROJECT_PATH'
      when: on_success
    - when: never
