# Assumes you already:
# - include: - template: Jobs/Container-Scanning.gitlab-ci.yml
# - emit image-digest.env from build:docker with IMAGE_REF=registry/path@sha256:...

container_scanning:
  stage: scan
  needs:
    - job: build:docker
      artifacts: true
      optional: true          # avoid “needs missing” if build didn’t run
  allow_failure: true
  # Reuse the same gating rules you use elsewhere (anchor defined in your repo)
  rules: !reference [.rule:scan-when-image-exists, rules]

  # Guard exactly like your scan:container job
  before_script:
    - set -euo pipefail 2>/dev/null || set -eu
    - |
      if [ ! -f image-digest.env ]; then
        echo "No image-digest.env — skipping"; exit 0
      fi
      . image-digest.env
      if [ -z "${IMAGE_REF:-}" ] || [ "${IMAGE_REF}" = "skipped" ]; then
        echo "No IMAGE_REF (image not pushed) — skipping"; exit 0
      fi
      echo "Scanning ${IMAGE_REF} ..."
      # Export for the analyzer: point at the immutable digest
      export CS_IMAGE="${IMAGE_REF}"

  variables:
    # Analyzer will pull from GitLab Registry using these creds
    DOCKER_AUTH_CONFIG: >
      {"auths":{
        "${CI_REGISTRY}":{"username":"${CI_REGISTRY_USER}","password":"${CI_REGISTRY_PASSWORD}"}
      }}

    # Optional controls (uncomment/tune as needed)
    # CS_SEVERITY_THRESHOLD: "critical"                 # fail on >= threshold
    # CS_DISABLE_LANGUAGE_VULNERABILITY_SCAN: "true"    # image-only (no app deps)
    # CS_TRIVY_TIMEOUT: "5m"
