# -------------------------------------------------------------------
# Run scans only when an MR targets env branches
# -------------------------------------------------------------------
.rule:scan-on-mr-to-env:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(dev|test|int|prod|main|master)$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:scan-manual-non-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: manual
      allow_failure: true

# -------------------------------------------------------------------
.rule:push-or-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:push-branches-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:tag-only:
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:mr-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:manual-anywhere:
  rules:
    - when: manual
      allow_failure: false

# -------------------------------------------------------------------
.rule:default-branch-only:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:protected-branches-only:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:protected-tags-only:
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:env-branches-only:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(dev|test|int|prod|main|master)$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:schedule-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:web-or-api-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "api"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:rc-tags-only:
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:mr-with-label-security-scan:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /(^|,)\s*security-scan\s*(,|$)/'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:skip-draft-mr:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /(?i)^(draft|wip):/'
      when: never
    - when: on_success

# -------------------------------------------------------------------
.rule:changes-only-src:
  rules:
    - changes:
        - src/**/*
        - cmd/**/*
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:skip-docs-only:
  rules:
    - changes:
        - docs/**/*
        - "**/*.md"
      when: never
    - when: on_success

# -------------------------------------------------------------------
.rule:mr-from-fork-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH != $CI_PROJECT_PATH'
      when: on_success
    - when: never

# -------------------------------------------------------------------
.rule:mr-same-project-only:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH == $CI_PROJECT_PATH'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Build matrix (simple, sane defaults)
# - Tags: push (& latest)
# - dev branch push
# - MR: build-only (no push)
# - Feature pushes: push only if PUSH_ON_FEATURE="true"
# -------------------------------------------------------------------
.rule:build-simple:
  rules:
    # Never run on schedules
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never

    # Release tags → push + latest
    - if: '$CI_COMMIT_TAG'
      when: on_success
      variables:
        RELEASE_IMAGE: "true"
        PUSH_IMAGE: "true"
        TAG_SUFFIX: ""
        TAG_LATEST: "true"
        DEBUG_REASON: "tag pipeline"

    # dev branch (post-merge) → push
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev"'
      when: on_success
      variables:
        PUSH_IMAGE: "true"
        TAG_SUFFIX: "dev"
        TAG_LATEST: "false"
        DEBUG_REASON: "dev branch push"

    # MR pipelines → build only (no push)
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
      variables:
        PUSH_IMAGE: "false"
        TAG_SUFFIX: "$CI_COMMIT_REF_SLUG"
        TAG_LATEST: "false"
        DEBUG_REASON: "mr pipeline (no push)"

    # Feature branch pushes → toggle push via var
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null'
      when: on_success
      variables:
        PUSH_IMAGE: "$PUSH_ON_FEATURE"
        TAG_SUFFIX: "$CI_COMMIT_REF_SLUG"
        TAG_LATEST: "false"
        DEBUG_REASON: "feature branch push"

    # Fallback
    - when: never
      variables:
        DEBUG_REASON: "no matching build rule"

# -------------------------------------------------------------------
# Scans should run on dev merges and on release tags
# -------------------------------------------------------------------
.rule:scan-dev-or-tag:
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Broader scan trigger when an image likely exists
# -------------------------------------------------------------------
.rule:scan-when-image-exists:
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(dev|test|int|prod)$/'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null && $PUSH_ON_FEATURE == "true"'
      when: on_success
    - when: never

# -------------------------------------------------------------------
# Scan on MRs automatically; allow manual on default or gmarm-* branches
# -------------------------------------------------------------------
.rule:scan-on-mr-or-manual:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH =~ /^gmarm-[A-Za-z0-9._-]+$/'
      when: manual
      allow_failure: true
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
      allow_failure: true
    - when: never

# -------------------------------------------------------------------
.rule:scheduled-nightly:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success

# -------------------------------------------------------------------
.rule:sast_scan:
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH =~ /^gmarm-[A-Za-z0-9._-]+$/'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual